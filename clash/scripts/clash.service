#!/system/bin/sh

scripts=`realpath $0`
scripts_dir=`dirname ${scripts}`
. /data/clash/clash.config

get_uid(){
    uid_proxy="payload:"
    for app in $1 ; do
        app_uid=$(dumpsys package $app | grep "userId" | tail -n -1 | cut -c 12-)
        if [ -n "$app_uid" ] ; then
            uid_proxy+="\n  - UID,"${app_uid}
        fi
    done
    echo $uid_proxy > $2
}

clean_last(){
    if [ -d ${Clash_run_path} ] ; then
        rm -rf ${Clash_run_path}.old
        mv -f ${Clash_run_path} ${Clash_run_path}.old
    fi
    mkdir -p ${Clash_run_path}
    chown ${Clash_user_group} ${Clash_run_path}
    chmod 0755 ${Clash_run_path}

    touch $CFM_logs_file
    touch $appuid_file
    touch $Clash_pid_file

}

start_clash() {
    clean_last
    if [ -n "$app_proxy" ] ; then
        get_uid "$app_proxy" "${Clash_data_dir}/rule_providers/${proxy_file}"
    fi
    if [ -n "$app_direct" ] ; then
        get_uid "$app_direct" "${Clash_data_dir}/rule_providers/${direct_file}"
    fi
    if [ "${ipv6}" = "false" ] ; then
        for net in /proc/sys/net/ipv6/conf/{wlan*,*data*} ; do
            # AVD中可能不存在data
            if [ -d ${net} ] ; then
                echo ${net} | grep -q wlan
                if [ $? -eq 0 ] ; then
                    echo 0 > ${net}/accept_ra
                fi
                echo 1 > ${net}/disable_ipv6
            fi
        done
    else
        for net in /proc/sys/net/ipv6/conf/{wlan*,*data*} ; do
            if [ -d ${net} ] ; then
                echo ${net} | grep -q wlan
                if [ $? -eq 0 ] ; then
                    echo 1 > ${net}/accept_ra
                fi
                echo 0 > ${net}/disable_ipv6
            fi
        done
    fi
    echo "" > ${CFM_logs_file}
    pid=`cat ${Clash_pid_file} 2> /dev/null`
    if (cat /proc/${pid}/cmdline | grep -q clash) ; then
        echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"info: 检测到clash已启动,此次不启动." >> ${CFM_logs_file}
        exit 1
    fi

    if [ "${Clash_tproxy_port}" == 0 ] || [ "${Clash_tproxy_port}" == ""  ]; then
        if [ "${Clash_tun_status}" != "true" ]; then
            echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"err: tproxy和tun得二选一." >> ${CFM_logs_file}
            exit 1
        fi
    fi
    
    # 合并文件逻辑
    if [ "${keep_dns}" == "true" && [ grep -q "^dns:$" ${template_file} ] ]; then
        awk '/dns:/ {exit} {print $0}' ${template_file} >> ${temporary_config_file}.swp
        sed -n -E '/^dns:.*$/,$p' ${Clash_config_file} >> ${temporary_config_file}.swp
    else # 从 proxies 开始
        cp -f ${template_file} ${temporary_config_file}.swp && echo "\n" >> ${temporary_config_file}.swp
        sed -n -E '/^proxies:.*$/,$p' ${Clash_config_file} >> ${temporary_config_file}.swp
    fi

    sed -i '/^[  ]*$/d' ${temporary_config_file}.swp

    mv -f ${temporary_config_file}.swp ${temporary_config_file} \
    && echo "" >> ${CFM_logs_file} || echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"err:配置文件合并失败"

    if [ -f "${Clash_bin_path}" ] ; then
        mkdir -p ${Clash_run_path}
        chown ${Clash_user_group} ${Clash_bin_path}
        chmod ${Clash_permissions} ${Clash_bin_path}
        chown ${Clash_user_group} ${temporary_config_file}
        chmod 0644 ${temporary_config_file}

        ${busybox_path} crontab -c ${Clash_run_path} -r
        touch ${Clash_run_path}/root
        chmod 0600 ${Clash_run_path}/root

        if [ "${auto_updateGeoSite}" == "true" ]; then
            echo "${update_geoXInterval} ${scripts_dir}/clash.tool -u" >> ${Clash_run_path}/root \
            && echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"info: 自动更新GeoX定时已开启." | tee -a ${CFM_logs_file}
        fi

        if [ "${auto_updateSubcript}" == "true" ]; then
            if [ -z "$Subcript_url" ]; then 
                echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"warn: 自动更新订阅定时已开启，但未设置订阅链接" | tee -a ${CFM_logs_file}
            else
                echo "${update_subcriptInterval} ${scripts_dir}/clash.tool -s" >> ${Clash_run_path}/root \
                && echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"info: 自动更新订阅定时已开启." | tee -a ${CFM_logs_file}
            fi
        fi

        sed -i '/^[  ]*$/d' ${CFM_logs_file}
        if [ "${filter_local}" = "true" ] ; then
            com="${scripts_dir}/clash.tool -m ; sleep 10 ;${scripts_dir}/clash.tool -m ; sleep 10; ${scripts_dir}/clash.tool -m ;sleep 10; ${scripts_dir}/clash.tool -m;sleep 10;${scripts_dir}/clash.tool -m ; sleep 10;${scripts_dir}/clash.tool -m"
            echo "*/1 * * * * ${com}" >> ${Clash_run_path}/root && echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"info: 自动绕过本地ip段已打开." >> ${CFM_logs_file}
        fi
    else
        echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"err: clash内核丢失." >> ${CFM_logs_file}
        exit 1
    fi

    if [ -f ${temporary_config_file} ] && [ -f ${Clash_GeoIP_file} ] ; then
        if $(${Clash_bin_path} -d ${Clash_data_dir} -t -f ${temporary_config_file} > /dev/null) ; then
            if [ "${Clash_tun_status}" == "true" ]; then
                mkdir -p /dev/net
                ln -sf /dev/tun /dev/net/tun
            fi
            [ ! -f /data/clash/run/kernel.log ] || mv /data/clash/run/kernel.log -f /data/clash/run/kernel.old.log
            ulimit -SHn 1000000
            nohup ${busybox_path} setuidgid ${Clash_user_group} ${Clash_bin_path} -d ${Clash_data_dir} -f ${temporary_config_file} > /data/clash/run/kernel.log 2>&1 &
            echo -n $! > ${Clash_pid_file}
            ${scripts_dir}/clash.tool -l
            echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"info: clash内核已启动." >> ${CFM_logs_file}
        else
            echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"info: Clash启动失败 配置错误 错误信息" >> ${CFM_logs_file}
            $(${Clash_bin_path} -d ${Clash_data_dir} -f ${Clash_config_file} -t  | grep error| awk -F 'msg=' '{print $2}'>> ${CFM_logs_file})
            kill_clash
            exit 1
        fi
    else
        echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"info: 文件缺失." >> ${CFM_logs_file}
        exit 1
    fi

    ${scripts_dir}/clash.iptables -s
    return # 去掉端口检查

    if [ "${Clash_tun_status}" == "true" ]; then
        return
    fi
    sleep 5
    if ! (${scripts_dir}/clash.tool -p) ; then
        kill_clash
        rm -rf ${Clash_pid_file}
        echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"err: 端口未检测到,已停止clash内核以及后续逻辑." >> ${CFM_logs_file}
        exit 1
    fi
}

stop_clash() {
    ${scripts_dir}/clash.iptables -k
    kill_clash
    echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]"info: 停止clash内核.\n" | tee -a ${CFM_logs_file}
}

kill_clash() {
    pids=`pgrep -f clash`
    for pid in $pids ; do
        kill -s SIGTERM $pid
    done
}


while getopts ":skc" signal ; do
    case ${signal} in
        c)
            clean_last
            ;;
        s)
            start_clash
            ;;
        k)
            stop_clash
            ;;
        ?)
            echo ""
            ;;
    esac
done
